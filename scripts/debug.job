#!/bin/bash
#SBATCH -t 2-00:00:00
#SBATCH -p gpu
#SBATCH --export=NONE

. scripts/init-cartesius.sh
. venv/bin/activate

echo -n "Started: " && date

mkdir -p output/debug

train() {
    name=$1
    second_param_onwards="${@:2}"
    echo "Training $name"
    python -u train.py cifar-10 --vgg_name='VGG11' --use_batchnorm=True --modification_start_layer=0 --out_path=output/debug/$name.pkl $second_param_onwards &> output/debug/$name.log
}

# trying faster training
train debugging-relog-elliptical-maxout-fast_training --device=cuda:0 --use_elliptical --curvature_multiplier_start=-1 --curvature_multiplier_stop=1 --curvature_multiplier_inc=0.001 --use_relog=True --log_strength_start=0 --log_strength_inc=0.001 --use_maxout=max --max_folding_factor=4 --n_epochs=40 &
train debugging-relog-elliptical-maxout-maxfit_l1-fast_training --device=cuda:1 --use_elliptical --curvature_multiplier_start=-1 --curvature_multiplier_stop=1 --curvature_multiplier_inc=0.001 --use_relog=True --log_strength_start=0 --log_strength_inc=0.001 --use_maxout=max --max_folding_factor=4 --regularization=max-fit --l1=1 --bias_l1=1 --regularization_start_epoch=5 --n_epochs=40 &
wait

# successful training sessions:
# train debugging-relu --device=cuda:0 &
# train debugging-relu-elliptical --device=cuda:0 --use_elliptical --curvature_multiplier_start=-0.5 --curvature_multiplier_stop=1 --n_epochs=80 &
# train debugging-relog-elliptical --device=cuda:1 --use_elliptical --curvature_multiplier_start=-0.5 --curvature_multiplier_stop=1 --use_relog=True --log_strength_start=-1 --log_strength_inc=0.0001 --n_epochs=80 &
# wait

# nearly successful training sessions:
# train debugging-relog-elliptical-maxout --device=cuda:0 --use_elliptical --curvature_multiplier_start=-0.5 --curvature_multiplier_stop=1 --use_relog=True --log_strength_start=-1 --log_strength_inc=0.0001 --use_maxout=max --max_folding_factor=4 --n_epochs=80 &
# train debugging-relog-elliptical-maxout-maxfit_l1 --device=cuda:1 --use_elliptical --curvature_multiplier_start=-0.5 --curvature_multiplier_stop=1 --use_relog=True --log_strength_start=-1 --log_strength_inc=0.0001 --use_maxout=max --max_folding_factor=4 --regularization=max-fit --l1=1 --bias_l1=1 --regularization_start_epoch=52 --n_epochs=80 &
# wait

execute_attack() {
    third_param_onwards="${@:3}"
    python -u adversarial.py --dataset=cifar10 --attack=$1 \
            --model_path=$2 --json_out_path=$out_path $third_param_onwards \
            --report_interval=5 --model_device=cpu # using CPUs to avoid OOM on a GPU
}

# for model_path in output/debug/debugging-relu.pkl output/debug/debugging-relog-elliptical-maxout-maxfit_l1.pkl output/debug/debugging-relog-elliptical-maxout.pkl
# for model_path in output/debug/debugging-relog-elliptical-maxout-maxfit_l1.pkl
# do
#     execute_attack BIM $model_path &
#     execute_attack CW $model_path &
#     execute_attack FGM_inf $model_path &
#     execute_attack FGM_L2 $model_path &
#     wait
# done

echo -n "Finished: " && date
